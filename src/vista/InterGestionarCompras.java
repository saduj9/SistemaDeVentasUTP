/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.Conexion;
import controlador.Ctrl_Proveedor;
import controlador.Ctrl_RegistrarCompra;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.CabeceraCompra;

/**
 *
 * @author saduj
 */
public class InterGestionarCompras extends javax.swing.JInternalFrame {

    private int idProveedor = 0;
    private int idCompra;

    public InterGestionarCompras() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Compras");
        //Cargar tabla
        this.CargarComboProveedores();
        this.CargarTablaCompras();

        //insertar imagen en nuestro JLabel
        ImageIcon wallpaper = new ImageIcon("src/img/fondo3.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(900, 500, WIDTH));
        jLabel_wallpaper.setIcon(icono);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ventas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_orden_compra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_fecha = new javax.swing.JTextField();
        jComboBox_proveedor = new javax.swing.JComboBox<>();
        jComboBox_estado_pago = new javax.swing.JComboBox<>();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Compras");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_ventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_ventas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("O/C:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, -1));

        txt_orden_compra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_orden_compra.setEnabled(false);
        jPanel3.add(txt_orden_compra, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 170, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Fecha:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 90, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Proveedor:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 90, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Estado Pago:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 130, -1));

        txt_fecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_fecha.setEnabled(false);
        jPanel3.add(txt_fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 170, -1));

        jComboBox_proveedor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_proveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione proveedor:", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(jComboBox_proveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 210, -1));

        jComboBox_estado_pago.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox_estado_pago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendiente de pago", "Pagado" }));
        jPanel3.add(jComboBox_estado_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 40, 170, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 100));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed

        CabeceraCompra cabeceraCompra = new CabeceraCompra();
        Ctrl_RegistrarCompra controlRegistrarCompra = new Ctrl_RegistrarCompra();
        Ctrl_Proveedor controlProveedor = new Ctrl_Proveedor();
        String proveedor, estadoPago;
        proveedor = jComboBox_proveedor.getSelectedItem().toString().trim();
        estadoPago = jComboBox_estado_pago.getSelectedItem().toString().trim();

        //obtener el id del proveedor
        int idProveedor = controlProveedor.obtenerIdProveedor(proveedor);

        //Actualizar datos
        cabeceraCompra.setOrdenCompra(txt_orden_compra.getText());
        cabeceraCompra.setFechaCompra(txt_fecha.getText());
        if (!proveedor.equalsIgnoreCase("Seleccione proveedor:")) {
            cabeceraCompra.setIdProveedor(idProveedor);
            if (estadoPago.equalsIgnoreCase("Pendiente de pago")) {
                cabeceraCompra.setEstadoPago("X");
            } else {
                cabeceraCompra.setEstadoPago("P");
            }
            
            if (controlRegistrarCompra.actualizar(cabeceraCompra, idCompra)) {
                JOptionPane.showMessageDialog(null, "Â¡Registro Actualizado!");
                this.CargarTablaCompras();
                this.Limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Error al Actualizar");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro para actualizar datos");
        }
    }//GEN-LAST:event_jButton_actualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JComboBox<String> jComboBox_estado_pago;
    private javax.swing.JComboBox<String> jComboBox_proveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_ventas;
    private javax.swing.JTextField txt_fecha;
    private javax.swing.JTextField txt_orden_compra;
    // End of variables declaration//GEN-END:variables
 private void Limpiar() {
        this.txt_orden_compra.setText("");
        this.txt_fecha.setText("");
        this.jComboBox_proveedor.setSelectedItem("Seleccione cliente:");
        this.jComboBox_estado_pago.setSelectedItem("Activo");
        idProveedor = 0;
    }


    /*
     * *****************************************************
     * metodo para mostrar todos los clientes registrados
     * *****************************************************
     */
    private void CargarTablaCompras() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select cc.idCabeceraCompra as id, concat(p.ruc, '-', p.razon_social) as proveedor, "
                + "cc.valor_compra as total,cc.orden_compra as orden,cc.num_documento as documento, cc.fecha_compra as fecha, cc.estado_pago "
                + "from tb_cabecera_compra as cc, tb_proveedor as p where cc.idProveedor = p.idProveedor;";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarCompras.jTable_ventas = new JTable(model);
            InterGestionarCompras.jScrollPane1.setViewportView(InterGestionarCompras.jTable_ventas);

            model.addColumn("NÂ°");//ID
            model.addColumn("Proveedor");
            model.addColumn("Total Pagar");
            model.addColumn("Orden de Compra");
            model.addColumn("Documento");
            model.addColumn("Fecha Compra");
            model.addColumn("Estado");

            while (rs.next()) {
                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {
                    if (i == 6) {
                        String estado = String.valueOf(rs.getObject(i + 1));
                        if (estado.equalsIgnoreCase("X")) {
                            fila[i] = "Pendiente de pago";
                        } else {
                            fila[i] = "Pagado";
                        }
                    } else {
                        fila[i] = rs.getObject(i + 1);
                    }
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla de compras: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_ventas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_ventas.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idCompra = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosCompraSeleccionada(idCompra);//metodo
                }
            }
        });
    }


    /*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
     */
    private void EnviarDatosCompraSeleccionada(int idCompra) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select cc.idCabeceraCompra, cc.idProveedor, concat(p.ruc, '-', p.razon_social) as proveedor, "
                    + "cc.valor_compra,cc.orden_compra,cc.num_documento, cc.fecha_compra, cc.estado_pago  from tb_cabecera_compra as cc, "
                    + "tb_proveedor as p where  cc.idCabeceraCompra = '" + idCompra + "' and cc.idProveedor = p.idProveedor and cc.estado = 1;");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                jComboBox_proveedor.setSelectedItem(rs.getString("proveedor"));
                txt_orden_compra.setText(rs.getString("orden_compra"));
                txt_fecha.setText(rs.getString("fecha_compra"));
                String estado = rs.getString("estado_pago");
                if (estado.equals("X")) {
                    jComboBox_estado_pago.setSelectedItem("Pendiente de pago");
                } else {
                    jComboBox_estado_pago.setSelectedItem("Pagado");
                }
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar compra: " + e);
        }
    }

    /*
    Metodo para cargar los clientes en el jComboBox
     */
    private void CargarComboProveedores() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_proveedor where estado = 1";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_proveedor.removeAllItems();
            jComboBox_proveedor.addItem("Seleccione proveedor:");
            while (rs.next()) {
                jComboBox_proveedor.addItem(rs.getString("ruc") + "-" + rs.getString("razon_social"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Â¡Error al cargar proveedores, !" + e);
        }
    }
}
